[constants]
gcc_path = ''
gcc_prefix = 'arm-none-eabi-'
gcc_base = gcc_path / gcc_prefix
common_flags = ['-mthumb', '-mcpu=cortex-m4', '-march=armv7e-m+fp', '-mfpu=fpv4-sp-d16', '-mfloat-abi=softfp']
compile_flags = ['-ffunction-sections', '-fdata-sections']
link_flags = ['-nostartfiles', '--static', '-Wl,--gc-sections']

[binaries]
c = gcc_base + 'gcc'
cpp = gcc_base + 'g++'
ar = gcc_base + 'ar'
as = gcc_base + 'as'
strip = gcc_base + 'strip'
objcopy = gcc_base + 'objcopy'
objdump = gcc_base + 'objdump'
size = gcc_base + 'size'
gdb = gcc_base + 'gdb'
cmake = 'false'

[properties]
sizeof_char = 1
sizeof_short = 2
sizeof_int = 4
sizeof_long = 4
sizeof_longlong = 8
sizeof_size_t = 4
sizeof_ptrdiff_t = 4
sizeof_void* = 4
sizeof_float = 4
sizeof_double = 8
sizeof_longdouble = 8
sizeof_wchar_t = 2

needs_exe_wrapper = true

[built-in options]
c_args = common_flags + compile_flags
cpp_args = common_flags + compile_flags + ['-fno-rtti', '-fno-exceptions']
c_link_args = common_flags + link_flags
cpp_link_args = common_flags + link_flags

cpp_eh = 'none'
cpp_rtti = false

[host_machine]
system = 'bare-metal'
cpu_family = 'arm'
cpu = 'cortex-m'
endian = 'little'
